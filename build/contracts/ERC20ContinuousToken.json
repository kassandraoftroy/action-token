{
  "contractName": "ERC20ContinuousToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveRatio",
      "outputs": [
        {
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_reserveTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "getContinuousMintReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_supply",
          "type": "uint256"
        },
        {
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "name": "_depositAmount",
          "type": "uint256"
        }
      ],
      "name": "calculatePurchaseReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_supply",
          "type": "uint256"
        },
        {
          "name": "_reserveBalance",
          "type": "uint256"
        },
        {
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "name": "_sellAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSaleReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_continuousTokenAmount",
          "type": "uint256"
        }
      ],
      "name": "getContinuousBurnRefund",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "continuousSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "name": "_initialSupply",
          "type": "uint256"
        },
        {
          "name": "_reserveRatio",
          "type": "uint32"
        },
        {
          "name": "_reserveTokenAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "deposit",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "refund",
          "type": "uint256"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReceived",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_minReceived",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveRatio\",\"outputs\":[{\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_reserveTokenAmount\",\"type\":\"uint256\"}],\"name\":\"getContinuousMintReward\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReceived\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_supply\",\"type\":\"uint256\"},{\"name\":\"_reserveBalance\",\"type\":\"uint256\"},{\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"name\":\"_depositAmount\",\"type\":\"uint256\"}],\"name\":\"calculatePurchaseReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_supply\",\"type\":\"uint256\"},{\"name\":\"_reserveBalance\",\"type\":\"uint256\"},{\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"name\":\"_sellAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleReturn\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_continuousTokenAmount\",\"type\":\"uint256\"}],\"name\":\"getContinuousBurnRefund\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_minReceived\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"continuousSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_initialSupply\",\"type\":\"uint256\"},{\"name\":\"_reserveRatio\",\"type\":\"uint32\"},{\"name\":\"_reserveTokenAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"deposit\",\"type\":\"uint256\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"refund\",\"type\":\"uint256\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"calculatePurchaseReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token), calculates the return for a given conversion (in the continuous token)    * Formula: Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)\",\"params\":{\"_depositAmount\":\"deposit amount, in reserve token\",\"_reserveBalance\":\"total reserve token balance\",\"_reserveRatio\":\"reserve ratio, represented in ppm, 1-1000000\",\"_supply\":\"continuous token total supply\"},\"return\":\"purchase return amount\"},\"calculateSaleReturn(uint256,uint256,uint32,uint256)\":{\"details\":\"given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token), calculates the return for a given conversion (in the reserve token)    * Formula: Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))\",\"params\":{\"_reserveBalance\":\"total reserve token balance\",\"_reserveRatio\":\"constant reserve ratio, represented in ppm, 1-1000000\",\"_sellAmount\":\"sell amount, in the continuous token itself\",\"_supply\":\"continuous token total supply\"},\"return\":\"sale return amount\"},\"decimals()\":{\"return\":\"the number of decimals of the token.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"name()\":{\"return\":\"the name of the token.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"symbol()\":{\"return\":\"the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/earth/Desktop/action-token/contracts/token/ERC20ContinuousToken.sol\":\"ERC20ContinuousToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/earth/Desktop/action-token/contracts/curves/BancorBondingCurve.sol\":{\"keccak256\":\"0xbd9c633e9bae84930d1b5e873c11b37888ffe4a8f5cf58dd7bc0bba9d0654653\",\"urls\":[\"bzzr://52d2622d69f37cf53d9f40f22423132e986083e3809dad4858ee67562dd0443c\"]},\"/Users/earth/Desktop/action-token/contracts/interfaces/IBondingCurve.sol\":{\"keccak256\":\"0x2f1516a1655f2607e3ee098494d46193b6a6ded7b097dd51577adc0c8c4807a1\",\"urls\":[\"bzzr://aceb8b7cb4ec22cfbf530fb2f5d4424a638e3ab2f10c6275e044bcf6d5519d48\"]},\"/Users/earth/Desktop/action-token/contracts/math/BancorFormula.sol\":{\"keccak256\":\"0x1837e93d651f14e64cb88d3525c009b17a75fa972228530aa78ed4d61c6240b8\",\"urls\":[\"bzzr://52c7fc253afd66fa9f5f5660eba46e0037ef3125d0cfcd3ee15e9378314adcf3\"]},\"/Users/earth/Desktop/action-token/contracts/math/Power.sol\":{\"keccak256\":\"0xc89111db4160cf5fadcf630bd0321c85727b6a48096abcb68404a38ac2198552\",\"urls\":[\"bzzr://ddba99cb1dabc04e534a52d7a4259fe21166c17994a65949a0fd3ecd30354a3f\"]},\"/Users/earth/Desktop/action-token/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xdd18f05c74536a06166c90a17ec3c6932853764f292bed314ceb23e730ff83af\",\"urls\":[\"bzzr://1d8a608339978ac18782f7051816cf23b4072d8814979e3ef74788cc6025cca0\"]},\"/Users/earth/Desktop/action-token/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x973e50d102a48ea6e132f18793b096910ed508656e89706744112cbb4ecaa9dd\",\"urls\":[\"bzzr://3b4ace05d2fa540ae11da5a4658f0993f4a364737d678d6ec96f12ef6caeeb7d\"]},\"/Users/earth/Desktop/action-token/contracts/token/ContinuousToken.sol\":{\"keccak256\":\"0x9aaf04880f32ae431330999ec59e4f644a22e5301dc909be722a0eec22c46699\",\"urls\":[\"bzzr://3e56ce41c935f1ac6869ca3a2eba6783abe6d74537865ce1809194bce45e7920\"]},\"/Users/earth/Desktop/action-token/contracts/token/ERC20.sol\":{\"keccak256\":\"0xd709ce6b2af0cc4d09518572008d62282671df80abdcd4e59e7d8d34a265ffd3\",\"urls\":[\"bzzr://ea67feb48fff1a6d97000959499944380fbdbc4d356a40edc473625527ac6ca8\"]},\"/Users/earth/Desktop/action-token/contracts/token/ERC20ContinuousToken.sol\":{\"keccak256\":\"0xf689d3d8b46a4cd291f868f442dc5fc53513af64b29acd8741ed85d82e4de006\",\"urls\":[\"bzzr://f1ed84d705bf431f90a1c511aa0f9da7bad88d4c01ca3276c3e71175bc6262c6\"]},\"/Users/earth/Desktop/action-token/contracts/token/ERC20Detailed.sol\":{\"keccak256\":\"0xafff01f07c0aca08e5db86a0f35bcf40cbd0a5da06aeeb9964b06c0bac507866\",\"urls\":[\"bzzr://40bb6c5e5b0c7b20f56eb7bd662e2dbd295f3b8f5f0cbb23cbe5114590110729\"]},\"/Users/earth/Desktop/action-token/contracts/token/IERC20.sol\":{\"keccak256\":\"0xc8a7f15fa44eb10057f8bcb58418d3aed6f5267d211d18f93f3d4e0293e3da44\",\"urls\":[\"bzzr://8825e2508348b01a091ff47b8525e583b6e5604f6679684f805d67a9a6a2a7e9\"]}},\"version\":1}",
  "bytecode": "0x60806040526040805190810160405280600381526020017f302e3300000000000000000000000000000000000000000000000000000000008152506007908051906020019062000051929190620012d0565b503480156200005f57600080fd5b5060405162004f4638038062004f46833981018060405281019080805182019291906020018051820192919060200180519060200190929190805190602001909291908051906020019092919080519060200190929190505050858585858580858585336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3826004908051906020019062000196929190620012d0565b508160059080519060200190620001af929190620012d0565b5080600660006101000a81548160ff021916908360ff160217905550505050701c35fedd14ffffffffffffffffffffffff60086020608081101515620001f157fe5b0181905550701b0ce43b323fffffffffffffffffffffff600860216080811015156200021957fe5b01819055507019f0028ec1ffffffffffffffffffffffff600860226080811015156200024157fe5b01819055507018ded91f0e7fffffffffffffffffffffff600860236080811015156200026957fe5b01819055507017d8ec7f0417ffffffffffffffffffffff600860246080811015156200029157fe5b01819055507016ddc6556cdbffffffffffffffffffffff60086025608081101515620002b957fe5b01819055507015ecf52776a1ffffffffffffffffffffff60086026608081101515620002e157fe5b01819055507015060c256cb2ffffffffffffffffffffff600860276080811015156200030957fe5b0181905550701428a2f98d72ffffffffffffffffffffff600860286080811015156200033157fe5b01819055507013545598e5c23fffffffffffffffffffff600860296080811015156200035957fe5b0181905550701288c4161ce1dfffffffffffffffffffff6008602a6080811015156200038157fe5b01819055507011c592761c666fffffffffffffffffffff6008602b608081101515620003a957fe5b018190555070110a688680a757ffffffffffffffffffff6008602c608081101515620003d157fe5b0181905550701056f1b5bedf77ffffffffffffffffffff6008602d608081101515620003f957fe5b0181905550700faadceceeff8bffffffffffffffffffff6008602e6080811015156200042157fe5b0181905550700f05dc6b27edadffffffffffffffffffff6008602f6080811015156200044957fe5b0181905550700e67a5a25da4107fffffffffffffffffff600860306080811015156200047157fe5b0181905550700dcff115b14eedffffffffffffffffffff600860316080811015156200049957fe5b0181905550700d3e7a392431239fffffffffffffffffff60086032608081101515620004c157fe5b0181905550700cb2ff529eb71e4fffffffffffffffffff60086033608081101515620004e957fe5b0181905550700c2d415c3db974afffffffffffffffffff600860346080811015156200051157fe5b0181905550700bad03e7d883f69bffffffffffffffffff600860356080811015156200053957fe5b0181905550700b320d03b2c343d5ffffffffffffffffff600860366080811015156200056157fe5b0181905550700abc25204e02828dffffffffffffffffff600860376080811015156200058957fe5b0181905550700a4b16f74ee4bb207fffffffffffffffff60086038608081101515620005b157fe5b01819055507009deaf736ac1f569ffffffffffffffffff60086039608081101515620005d957fe5b0181905550700976bd9952c7aa957fffffffffffffffff6008603a6080811015156200060157fe5b01819055507009131271922eaa606fffffffffffffffff6008603b6080811015156200062957fe5b01819055507008b380f3558668c46fffffffffffffffff6008603c6080811015156200065157fe5b0181905550700857ddf0117efa215bffffffffffffffff6008603d6080811015156200067957fe5b01819055507007ffffffffffffffffffffffffffffffff6008603e608081101515620006a157fe5b01819055507007abbf6f6abb9d087fffffffffffffffff6008603f608081101515620006c957fe5b018190555070075af62cbac95f7dfa7fffffffffffffff60086040608081101515620006f157fe5b018190555070070d7fb7452e187ac13fffffffffffffff600860416080811015156200071957fe5b01819055507006c3390ecc8af379295fffffffffffffff600860426080811015156200074157fe5b018190555070067c00a3b07ffc01fd6fffffffffffffff600860436080811015156200076957fe5b0181905550700637b647c39cbb9d3d27ffffffffffffff600860446080811015156200079157fe5b01819055507005f63b1fc104dbd39587ffffffffffffff60086045608081101515620007b957fe5b01819055507005b771955b36e12f7235ffffffffffffff60086046608081101515620007e157fe5b018190555070057b3d49dda84556d6f6ffffffffffffff600860476080811015156200080957fe5b018190555070054183095b2c8ececf30ffffffffffffff600860486080811015156200083157fe5b018190555070050a28be635ca2b888f77fffffffffffff600860496080811015156200085957fe5b01819055507004d5156639708c9db33c3fffffffffffff6008604a6080811015156200088157fe5b01819055507004a23105873875bd52dfdfffffffffffff6008604b608081101515620008a957fe5b0181905550700471649d87199aa990756fffffffffffff6008604c608081101515620008d157fe5b01819055507004429a21a029d4c1457cfbffffffffffff6008604d608081101515620008f957fe5b0181905550700415bc6d6fb7dd71af2cb3ffffffffffff6008604e6080811015156200092157fe5b01819055507003eab73b3bbfe282243ce1ffffffffffff6008604f6080811015156200094957fe5b01819055507003c1771ac9fb6b4c18e229ffffffffffff600860506080811015156200097157fe5b0181905550700399e96897690418f785257fffffffffff600860516080811015156200099957fe5b0181905550700373fc456c53bb779bf0ea9fffffffffff60086052608081101515620009c157fe5b018190555070034f9e8e490c48e67e6ab8bfffffffffff60086053608081101515620009e957fe5b018190555070032cbfd4a7adc790560b3337ffffffffff6008605460808110151562000a1157fe5b018190555070030b50570f6e5d2acca94613ffffffffff6008605560808110151562000a3957fe5b01819055507002eb40f9f620fda6b56c2861ffffffffff6008605660808110151562000a6157fe5b01819055507002cc8340ecb0d0f520a6af58ffffffffff6008605760808110151562000a8957fe5b01819055507002af09481380a0a35cf1ba02ffffffffff6008605860808110151562000ab157fe5b0181905550700292c5bdd3b92ec810287b1b3fffffffff6008605960808110151562000ad957fe5b0181905550700277abdcdab07d5a77ac6d6b9fffffffff6008605a60808110151562000b0157fe5b018190555070025daf6654b1eaa55fd64df5efffffffff6008605b60808110151562000b2957fe5b0181905550700244c49c648baa98192dce88b7ffffffff6008605c60808110151562000b5157fe5b018190555070022ce03cd5619a311b2471268bffffffff6008605d60808110151562000b7957fe5b0181905550700215f77c045fbe885654a44a0fffffffff6008605e60808110151562000ba157fe5b01819055507001ffffffffffffffffffffffffffffffff6008605f60808110151562000bc957fe5b01819055507001eaefdbdaaee7421fc4d3ede5ffffffff6008606060808110151562000bf157fe5b01819055507001d6bd8b2eb257df7e8ca57b09bfffffff6008606160808110151562000c1957fe5b01819055507001c35fedd14b861eb0443f7f133fffffff6008606260808110151562000c4157fe5b01819055507001b0ce43b322bcde4a56e8ada5afffffff6008606360808110151562000c6957fe5b018190555070019f0028ec1fff007f5a195a39dfffffff6008606460808110151562000c9157fe5b018190555070018ded91f0e72ee74f49b15ba527ffffff6008606560808110151562000cb957fe5b018190555070017d8ec7f04136f4e5615fd41a63ffffff6008606660808110151562000ce157fe5b018190555070016ddc6556cdb84bdc8d12d22e6fffffff6008606760808110151562000d0957fe5b018190555070015ecf52776a1155b5bd8395814f7fffff6008606860808110151562000d3157fe5b018190555070015060c256cb23b3b3cc3754cf40ffffff6008606960808110151562000d5957fe5b01819055507001428a2f98d728ae223ddab715be3fffff6008606a60808110151562000d8157fe5b018190555070013545598e5c23276ccf0ede68034fffff6008606b60808110151562000da957fe5b01819055507001288c4161ce1d6f54b7f61081194fffff6008606c60808110151562000dd157fe5b018190555070011c592761c666aa641d5a01a40f17ffff6008606d60808110151562000df957fe5b0181905550700110a688680a7530515f3e6e6cfdcdffff6008606e60808110151562000e2157fe5b01819055507001056f1b5bedf75c6bcb2ce8aed428ffff6008606f60808110151562000e4957fe5b01819055506ffaadceceeff8a0890f3875f008277fff6008607060808110151562000e7057fe5b01819055506ff05dc6b27edad306388a600f6ba0bfff6008607160808110151562000e9757fe5b01819055506fe67a5a25da41063de1495d5b18cdbfff6008607260808110151562000ebe57fe5b01819055506fdcff115b14eedde6fc3aa5353f2e4fff6008607360808110151562000ee557fe5b01819055506fd3e7a3924312399f9aae2e0f868f8fff6008607460808110151562000f0c57fe5b01819055506fcb2ff529eb71e41582cccd5a1ee26fff6008607560808110151562000f3357fe5b01819055506fc2d415c3db974ab32a51840c0b67edff6008607660808110151562000f5a57fe5b01819055506fbad03e7d883f69ad5b0a186184e06bff6008607760808110151562000f8157fe5b01819055506fb320d03b2c343d4829abd6075f0cc5ff6008607860808110151562000fa857fe5b01819055506fabc25204e02828d73c6e80bcdb1a95bf6008607960808110151562000fcf57fe5b01819055506fa4b16f74ee4bb2040a1ec6c15fbbf2df6008607a60808110151562000ff657fe5b01819055506f9deaf736ac1f569deb1b5ae3f36c130f6008607b6080811015156200101d57fe5b01819055506f976bd9952c7aa957f5937d790ef650376008607c6080811015156200104457fe5b01819055506f9131271922eaa6064b73a22d0bd4f2bf6008607d6080811015156200106b57fe5b01819055506f8b380f3558668c46c91c49a2f8e967b96008607e6080811015156200109257fe5b01819055506f857ddf0117efa215952912839f6473e66008607f608081101515620010b957fe5b018190555080608860006101000a81548163ffffffff021916908363ffffffff16021790555050620010fb33836200114d640100000000026401000000009004565b505050505080608860046101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050506200137f565b60008273ffffffffffffffffffffffffffffffffffffffff16141515156200117457600080fd5b6200119981600354620012ae64010000000002620021ea179091906401000000009004565b6003819055506200120181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620012ae64010000000002620021ea179091906401000000009004565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000808284019050838110151515620012c657600080fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200131357805160ff191683800117855562001344565b8280016001018555821562001344579182015b828111156200134357825182559160200191906001019062001326565b5b50905062001353919062001357565b5090565b6200137c91905b80821115620013785760008160009055506001016200135e565b5090565b90565b613bb7806200138f6000396000f300608060405260043610610154576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101cf578063095ea7b31461025f5780630c7d5cd8146102c45780630d8f9f7f146102fb57806318160ddd1461033c5780631b2ef1ca1461036757806323b872dd1461039e57806329a00e7c14610423578063313ce5671461048857806339509351146104b957806349f9b0f71461051e57806354fd4d501461058357806370a0823114610613578063715018a61461066a5780637cbed3e0146106815780638da5cb5b146106c25780638f32d59b1461071957806395d89b4114610748578063a10954fe146107d8578063a457c2d714610803578063a9059cbb14610868578063b390c0ab146108cd578063da12457a14610904578063dd62ed3e1461092f578063f2fde38b146109a6578063f4325d67146109e9575b34801561016057600080fd5b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2e000081525060200191505060405180910390fd5b3480156101db57600080fd5b506101e4610a40565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610224578082015181840152602081019050610209565b50505050905090810190601f1680156102515780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561026b57600080fd5b506102aa600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610ae2565b604051808215151515815260200191505060405180910390f35b3480156102d057600080fd5b506102d9610c0f565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561030757600080fd5b5061032660048036038101908080359060200190929190505050610c25565b6040518082815260200191505060405180910390f35b34801561034857600080fd5b50610351610c5a565b6040518082815260200191505060405180910390f35b34801561037357600080fd5b5061039c6004803603810190808035906020019092919080359060200190929190505050610c64565b005b3480156103aa57600080fd5b50610409600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e41565b604051808215151515815260200191505060405180910390f35b34801561042f57600080fd5b506104726004803603810190808035906020019092919080359060200190929190803563ffffffff16906020019092919080359060200190929190505050610ff3565b6040518082815260200191505060405180910390f35b34801561049457600080fd5b5061049d61116d565b604051808260ff1660ff16815260200191505060405180910390f35b3480156104c557600080fd5b50610504600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611184565b604051808215151515815260200191505060405180910390f35b34801561052a57600080fd5b5061056d6004803603810190808035906020019092919080359060200190929190803563ffffffff169060200190929190803590602001909291905050506113bb565b6040518082815260200191505060405180910390f35b34801561058f57600080fd5b50610598611568565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105d85780820151818401526020810190506105bd565b50505050905090810190601f1680156106055780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561061f57600080fd5b50610654600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611606565b6040518082815260200191505060405180910390f35b34801561067657600080fd5b5061067f61164f565b005b34801561068d57600080fd5b506106ac60048036038101908080359060200190929190505050611721565b6040518082815260200191505060405180910390f35b3480156106ce57600080fd5b506106d7611756565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561072557600080fd5b5061072e61177f565b604051808215151515815260200191505060405180910390f35b34801561075457600080fd5b5061075d6117d6565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561079d578082015181840152602081019050610782565b50505050905090810190601f1680156107ca5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156107e457600080fd5b506107ed611878565b6040518082815260200191505060405180910390f35b34801561080f57600080fd5b5061084e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611977565b604051808215151515815260200191505060405180910390f35b34801561087457600080fd5b506108b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611bae565b604051808215151515815260200191505060405180910390f35b3480156108d957600080fd5b506109026004803603810190808035906020019092919080359060200190929190505050611bc5565b005b34801561091057600080fd5b50610919611d4c565b6040518082815260200191505060405180910390f35b34801561093b57600080fd5b50610990600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d5b565b6040518082815260200191505060405180910390f35b3480156109b257600080fd5b506109e7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611de2565b005b3480156109f557600080fd5b506109fe611e01565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ad85780601f10610aad57610100808354040283529160200191610ad8565b820191906000526020600020905b815481529060010190602001808311610abb57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610b1f57600080fd5b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b608860009054906101000a900463ffffffff1681565b6000610c53610c32611d4c565b610c3a611878565b608860009054906101000a900463ffffffff1685610ff3565b9050919050565b6000600354905090565b610c6e8282611e27565b50608860049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015610d6857600080fd5b505af1158015610d7c573d6000803e3d6000fd5b505050506040513d6020811015610d9257600080fd5b81019080805190602001909291905050501515610e3d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f6d696e7428292045524332302e7472616e7366657246726f6d206661696c656481526020017f2e0000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5050565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610ece57600080fd5b610f5d82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f4390919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fe8848484611f64565b600190509392505050565b6000806000806000808911801561100a5750600088115b801561101c575060008763ffffffff16115b80156110375750620f424063ffffffff168763ffffffff1611155b15156110ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c696420696e707574732e000000000000000000000000000000000081525060200191505060405180910390fd5b60008614156110bd5760009450611161565b620f424063ffffffff168763ffffffff161415611100576110f9886110eb888c61218290919063ffffffff16565b6121c090919063ffffffff16565b9450611161565b61111388876121ea90919063ffffffff16565b9150611124828989620f424061220b565b80945081955050508260ff16611143858b61218290919063ffffffff16565b9060020a9004905061115e8982611f4390919063ffffffff16565b94505b50505050949350505050565b6000600660009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156111c157600080fd5b61125082600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121ea90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b60008060008060008060008a1180156113d45750600089115b80156113e6575060008863ffffffff16115b80156114015750620f424063ffffffff168863ffffffff1611155b801561140d5750898711155b1515611481576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f496e76616c696420696e707574732e000000000000000000000000000000000081525060200191505060405180910390fd5b6000871415611493576000955061155b565b898714156114a35788955061155b565b620f424063ffffffff168863ffffffff1614156114e6576114df8a6114d1898c61218290919063ffffffff16565b6121c090919063ffffffff16565b955061155b565b6114f9878b611f4390919063ffffffff16565b925061150a8a84620f42408b61220b565b8095508196505050611525858a61218290919063ffffffff16565b91508360ff16899060020a0290506115588561154a8385611f4390919063ffffffff16565b6121c090919063ffffffff16565b95505b5050505050949350505050565b60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115fe5780601f106115d3576101008083540402835291602001916115fe565b820191906000526020600020905b8154815290600101906020018083116115e157829003601f168201915b505050505081565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61165761177f565b151561166257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600061174f61172e611d4c565b611736611878565b608860009054906101000a900463ffffffff16856113bb565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b606060058054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561186e5780601f106118435761010080835404028352916020019161186e565b820191906000526020600020905b81548152906001019060200180831161185157829003601f168201915b5050505050905090565b6000608860049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801561193757600080fd5b505af115801561194b573d6000803e3d6000fd5b505050506040513d602081101561196157600080fd5b8101908080519060200190929190505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156119b457600080fd5b611a4382600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f4390919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000611bbb338484611f64565b6001905092915050565b6000611bd183836123e7565b9050608860049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611c9857600080fd5b505af1158015611cac573d6000803e3d6000fd5b505050506040513d6020811015611cc257600080fd5b81019080805190602001909291905050501515611d47576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6275726e28292045524332302e7472616e73666572206661696c65642e00000081525060200191505060405180910390fd5b505050565b6000611d56610c5a565b905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b611dea61177f565b1515611df557600080fd5b611dfe81612583565b50565b608860049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600084111515611ea2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4465706f736974206d757374206265206e6f6e2d7a65726f2e0000000000000081525060200191505060405180910390fd5b611eab84610c25565b9050828110151515611ebc57600080fd5b611ec6338261267d565b7f25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff338286604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a18091505092915050565b600080838311151515611f5557600080fd5b82840390508091505092915050565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151515611fb257600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611fee57600080fd5b61204081600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f4390919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506120d581600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121ea90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b600080600084141561219757600091506121b9565b82840290508284828115156121a857fe5b041415156121b557600080fd5b8091505b5092915050565b6000806000831115156121d257600080fd5b82848115156121dd57fe5b0490508091505092915050565b600080828401905083811015151561220157600080fd5b8091505092915050565b6000806000806000807002000000000000000000000000000000008a10151561229c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f626173654e2065786365656473206d61782076616c75652e000000000000000081525060200191505060405180910390fd5b888a10151515612314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f4261736573203c203120617265206e6f7420737570706f727465642e0000000081525060200191505060405180910390fd5b886f800000000000000000000000000000008b0281151561233157fe5b04925070015bf0a8b1457695355fb8ac404e7a79e383101561235d57612356836127bd565b9350612369565b61236683612d8c565b93505b8663ffffffff168863ffffffff16850281151561238257fe5b0491507008000000000000000000000000000000008210156123b2576123a782612ec7565b607f955095506123da565b6123bb82613487565b90506123d481607f0360ff16839060020a900482613547565b81955095505b5050505094509492505050565b600080600084111515612462576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f416d6f756e74206d757374206265206e6f6e2d7a65726f2e000000000000000081525060200191505060405180910390fd5b8361246c33611606565b101515156124e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f496e73756666696369656e7420746f6b656e7320746f206275726e2e0000000081525060200191505060405180910390fd5b6124eb84611721565b90508281101515156124fc57600080fd5b612506338561396b565b7f23ff0e75edf108e3d0392d92e13e8c8a868ef19001bd49f9e94876dc46dff87f338583604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a18091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156125bf57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008273ffffffffffffffffffffffffffffffffffffffff16141515156126a357600080fd5b6126b8816003546121ea90919063ffffffff16565b60038190555061271081600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546121ea90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008060008060008093506fd3094c70f034de4b96ff7d5b6f99fcd886101515612827576f40000000000000000000000000000000840193506fd3094c70f034de4b96ff7d5b6f99fcd86f80000000000000000000000000000000870281151561282357fe5b0495505b6fa45af1e1f40c333b3de1db4dd55f29a786101515612886576f20000000000000000000000000000000840193506fa45af1e1f40c333b3de1db4dd55f29a76f80000000000000000000000000000000870281151561288257fe5b0495505b6f910b022db7ae67ce76b441c27035c6a1861015156128e5576f10000000000000000000000000000000840193506f910b022db7ae67ce76b441c27035c6a16f8000000000000000000000000000000087028115156128e157fe5b0495505b6f88415abbe9a76bead8d00cf112e4d4a886101515612944576f08000000000000000000000000000000840193506f88415abbe9a76bead8d00cf112e4d4a86f80000000000000000000000000000000870281151561294057fe5b0495505b6f84102b00893f64c705e841d5d4064bd3861015156129a3576f04000000000000000000000000000000840193506f84102b00893f64c705e841d5d4064bd36f80000000000000000000000000000000870281151561299f57fe5b0495505b6f8204055aaef1c8bd5c3259f4822735a286101515612a02576f02000000000000000000000000000000840193506f8204055aaef1c8bd5c3259f4822735a26f8000000000000000000000000000000087028115156129fe57fe5b0495505b6f810100ab00222d861931c15e39b44e9986101515612a61576f01000000000000000000000000000000840193506f810100ab00222d861931c15e39b44e996f800000000000000000000000000000008702811515612a5d57fe5b0495505b6f808040155aabbbe9451521693554f73386101515612abf576e800000000000000000000000000000840193506f808040155aabbbe9451521693554f7336f800000000000000000000000000000008702811515612abb57fe5b0495505b6f80000000000000000000000000000000860392508291506f80000000000000000000000000000000838402811515612af457fe5b04905070010000000000000000000000000000000083700100000000000000000000000000000000038302811515612b2857fe5b04840193506f80000000000000000000000000000000818302811515612b4a57fe5b049150700200000000000000000000000000000000836faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa038302811515612b7d57fe5b04840193506f80000000000000000000000000000000818302811515612b9f57fe5b049150700300000000000000000000000000000000836f99999999999999999999999999999999038302811515612bd257fe5b04840193506f80000000000000000000000000000000818302811515612bf457fe5b049150700400000000000000000000000000000000836f92492492492492492492492492492492038302811515612c2757fe5b04840193506f80000000000000000000000000000000818302811515612c4957fe5b049150700500000000000000000000000000000000836f8e38e38e38e38e38e38e38e38e38e38e038302811515612c7c57fe5b04840193506f80000000000000000000000000000000818302811515612c9e57fe5b049150700600000000000000000000000000000000836f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b038302811515612cd157fe5b04840193506f80000000000000000000000000000000818302811515612cf357fe5b049150700700000000000000000000000000000000836f89d89d89d89d89d89d89d89d89d89d89038302811515612d2657fe5b04840193506f80000000000000000000000000000000818302811515612d4857fe5b049150700800000000000000000000000000000000836f88888888888888888888888888888888038302811515612d7b57fe5b048401935083945050505050919050565b600080600080600080935085925070010000000000000000000000000000000083101515612e0057612dd86f8000000000000000000000000000000084811515612dd257fe5b04613af9565b91508160ff16839060020a900492506f800000000000000000000000000000008260ff160293505b6f80000000000000000000000000000000831115612e8e57607f90505b60008160ff161115612e8d576f80000000000000000000000000000000838402811515612e4657fe5b04925070010000000000000000000000000000000083101515612e81576001839060020a900492506001810360ff1660019060020a02840193505b80600190039050612e1d565b5b6f05b9de1d10bf4103d647b0955897ba806f03f80fe03f80fe03f80fe03f80fe03f88502811515612ebb57fe5b04945050505050919050565b600080600080600092506f1000000000000000000000000000000085811515612eec57fe5b0691508190506f80000000000000000000000000000000828202811515612f0f57fe5b0490506710e1b3be415a00008102830192506f80000000000000000000000000000000828202811515612f3e57fe5b0490506705a0913f6b1e00008102830192506f80000000000000000000000000000000828202811515612f6d57fe5b049050670168244fdac780008102830192506f80000000000000000000000000000000828202811515612f9c57fe5b049050664807432bc180008102830192506f80000000000000000000000000000000828202811515612fca57fe5b049050660c0135dca040008102830192506f80000000000000000000000000000000828202811515612ff857fe5b0490506601b707b1cdc0008102830192506f8000000000000000000000000000000082820281151561302657fe5b0490506536e0f639b8008102830192506f8000000000000000000000000000000082820281151561305357fe5b049050650618fee9f8008102830192506f8000000000000000000000000000000082820281151561308057fe5b049050649c197dcc008102830192506f800000000000000000000000000000008282028115156130ac57fe5b049050640e30dce4008102830192506f800000000000000000000000000000008282028115156130d857fe5b04905064012ebd13008102830192506f8000000000000000000000000000000082820281151561310457fe5b0490506317499f008102830192506f8000000000000000000000000000000082820281151561312f57fe5b0490506301a9d4808102830192506f8000000000000000000000000000000082820281151561315a57fe5b049050621c63808102830192506f8000000000000000000000000000000082820281151561318457fe5b0490506201c6388102830192506f800000000000000000000000000000008282028115156131ae57fe5b049050611ab88102830192506f800000000000000000000000000000008282028115156131d757fe5b04905061017c8102830192506f8000000000000000000000000000000082820281151561320057fe5b04905060148102830192506f8000000000000000000000000000000082820281151561322857fe5b04905060018102830192506f80000000000000000000000000000000826721c3677c82b400008581151561325857fe5b040101925060006f1000000000000000000000000000000086161415156132ac5770018ebef9eac820ae8682b9793ac6d1e7767001c3d6a24ed82218787d624d3e5eba95f984028115156132a857fe5b0492505b60006f2000000000000000000000000000000086161415156132fb577001368b2fc6f9609fe7aceb46aa619baed470018ebef9eac820ae8682b9793ac6d1e77884028115156132f757fe5b0492505b60006f400000000000000000000000000000008616141515613349576fbc5ab1b16779be3575bd8f0520a9f21f7001368b2fc6f9609fe7aceb46aa619baed5840281151561334557fe5b0492505b60006f800000000000000000000000000000008616141515613396576f454aaa8efe072e7f6ddbab84b40a55c96fbc5ab1b16779be3575bd8f0520a9f21e840281151561339257fe5b0492505b600070010000000000000000000000000000000086161415156133e4576f0960aadc109e7a3bf4578099615711ea6f454aaa8efe072e7f6ddbab84b40a55c584028115156133e057fe5b0492505b60007002000000000000000000000000000000008616141515613431576e2bf84208204f5977f9a8cf01fdce3d6f0960aadc109e7a3bf4578099615711d7840281151561342d57fe5b0492505b6000700400000000000000000000000000000000861614151561347c576d03c6ab775dd0b95b4cbee7e65d116e2bf84208204f5977f9a8cf01fdc307840281151561347857fe5b0492505b829350505050919050565b60008060008060209250607f91505b8160ff166001840160ff1610156134e857600282840160ff168115156134b857fe5b0490508460088260ff166080811015156134ce57fe5b01541015156134df578092506134e3565b8091505b613496565b8460088360ff166080811015156134fb57fe5b015410151561350c5781935061353f565b8460088460ff1660808110151561351f57fe5b01541015156135305782935061353f565b6000151561353a57fe5b600093505b505050919050565b6000806000849150600090508360ff168583029060020a900491506f03442c4e6074a82f1797f72ac00000008202810190508360ff168583029060020a900491506f0116b96f757c380fb287fd0e400000008202810190508360ff168583029060020a900491506e45ae5bdd5f0e03eca1ff43900000008202810190508360ff168583029060020a900491506e0defabf91302cd95b9ffda500000008202810190508360ff168583029060020a900491506e02529ca9832b22439efff9b80000008202810190508360ff168583029060020a900491506d54f1cf12bd04e516b6da880000008202810190508360ff168583029060020a900491506d0a9e39e257a09ca2d6db510000008202810190508360ff168583029060020a900491506d012e066e7b839fa050c3090000008202810190508360ff168583029060020a900491506c1e33d7d926c329a1ad1a8000008202810190508360ff168583029060020a900491506c02bee513bdb4a6b19b5f8000008202810190508360ff168583029060020a900491506b3a9316fa79b88eccf2a000008202810190508360ff168583029060020a900491506b048177ebe1fa8123752000008202810190508360ff168583029060020a900491506a5263fe90242dcbacf000008202810190508360ff168583029060020a900491506a057e22099c030d941000008202810190508360ff168583029060020a900491506957e22099c030d94100008202810190508360ff168583029060020a9004915069052b6b545699763100008202810190508360ff168583029060020a90049150684985f67696bf7480008202810190508360ff168583029060020a900491506803dea12ea99e4980008202810190508360ff168583029060020a900491506731880f2214b6e0008202810190508360ff168583029060020a9004915067025bcff56eb360008202810190508360ff168583029060020a90049150661b722e10ab10008202810190508360ff168583029060020a900491506601317c700770008202810190508360ff168583029060020a90049150650cba84aafa008202810190508360ff168583029060020a900491506482573a0a008202810190508360ff168583029060020a900491506405035ad9008202810190508360ff168583029060020a90049150632f881b008202810190508360ff168583029060020a900491506301b293408202810190508360ff168583029060020a90049150620efc408202810190508360ff168583029060020a90049150617fe08202810190508360ff168583029060020a900491506104208202810190508360ff168583029060020a9004915060218202810190508360ff168583029060020a9004915060018202810190508360ff1660019060020a02856f0688589cc0e9505e2f2fee55800000008381151561395e57fe5b0401019250505092915050565b60008273ffffffffffffffffffffffffffffffffffffffff161415151561399157600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481111515156139df57600080fd5b6139f481600354611f4390919063ffffffff16565b600381905550613a4c81600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f4390919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008060008060009250849150610100821015613b35575b6001821115613b30576001829060020a90049150600183019250613b11565b613b80565b608090505b60008160ff161115613b7f578060ff1660019060020a0282101515613b6c578060ff16829060020a9004915080831792505b60018160ff169060020a90049050613b3a565b5b8293505050509190505600a165627a7a72305820368fe70089a6be35a67e3d96cb4b4ae0ca37bb18c274336ac2ef2c8179fa5aaf0029",
  "deployedBytecode": "",
  "sourceMap": "58:1071:8:-;;;562:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;145:326:8;8:9:-1;5:2;;;30:1;27;20:12;5:2;145:326:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;354:5;361:7;370:9;381:14;397:13;639::6;593:5;600:7;609:9;518:10:5;509:6;;:19;;;;;;;;;;;;;;;;;;572:6;;;;;;;;;;;539:40;;568:1;539:40;;;;;;;;;;;;475:4:9;467:5;:12;;;;;;;;;;;;:::i;:::-;;495:6;485:7;:16;;;;;;;;;;;;:::i;:::-;;519:8;507:9;;:20;;;;;;;;;;;;;;;;;;398:134;;;4067:36:3;4049:11;4061:2;4049:15;;;;;;;;;;:54;;;;4131:36;4113:11;4125:2;4113:15;;;;;;;;;;:54;;;;4195:36;4177:11;4189:2;4177:15;;;;;;;;;;:54;;;;4259:36;4241:11;4253:2;4241:15;;;;;;;;;;:54;;;;4323:36;4305:11;4317:2;4305:15;;;;;;;;;;:54;;;;4387:36;4369:11;4381:2;4369:15;;;;;;;;;;:54;;;;4451:36;4433:11;4445:2;4433:15;;;;;;;;;;:54;;;;4515:36;4497:11;4509:2;4497:15;;;;;;;;;;:54;;;;4579:36;4561:11;4573:2;4561:15;;;;;;;;;;:54;;;;4643:36;4625:11;4637:2;4625:15;;;;;;;;;;:54;;;;4707:36;4689:11;4701:2;4689:15;;;;;;;;;;:54;;;;4771:36;4753:11;4765:2;4753:15;;;;;;;;;;:54;;;;4835:36;4817:11;4829:2;4817:15;;;;;;;;;;:54;;;;4899:36;4881:11;4893:2;4881:15;;;;;;;;;;:54;;;;4963:36;4945:11;4957:2;4945:15;;;;;;;;;;:54;;;;5027:36;5009:11;5021:2;5009:15;;;;;;;;;;:54;;;;5091:36;5073:11;5085:2;5073:15;;;;;;;;;;:54;;;;5155:36;5137:11;5149:2;5137:15;;;;;;;;;;:54;;;;5219:36;5201:11;5213:2;5201:15;;;;;;;;;;:54;;;;5283:36;5265:11;5277:2;5265:15;;;;;;;;;;:54;;;;5347:36;5329:11;5341:2;5329:15;;;;;;;;;;:54;;;;5411:36;5393:11;5405:2;5393:15;;;;;;;;;;:54;;;;5475:36;5457:11;5469:2;5457:15;;;;;;;;;;:54;;;;5539:36;5521:11;5533:2;5521:15;;;;;;;;;;:54;;;;5603:36;5585:11;5597:2;5585:15;;;;;;;;;;:54;;;;5667:36;5649:11;5661:2;5649:15;;;;;;;;;;:54;;;;5731:36;5713:11;5725:2;5713:15;;;;;;;;;;:54;;;;5795:36;5777:11;5789:2;5777:15;;;;;;;;;;:54;;;;5859:36;5841:11;5853:2;5841:15;;;;;;;;;;:54;;;;5923:36;5905:11;5917:2;5905:15;;;;;;;;;;:54;;;;5987:36;5969:11;5981:2;5969:15;;;;;;;;;;:54;;;;6051:36;6033:11;6045:2;6033:15;;;;;;;;;;:54;;;;6115:36;6097:11;6109:2;6097:15;;;;;;;;;;:54;;;;6179:36;6161:11;6173:2;6161:15;;;;;;;;;;:54;;;;6243:36;6225:11;6237:2;6225:15;;;;;;;;;;:54;;;;6307:36;6289:11;6301:2;6289:15;;;;;;;;;;:54;;;;6371:36;6353:11;6365:2;6353:15;;;;;;;;;;:54;;;;6435:36;6417:11;6429:2;6417:15;;;;;;;;;;:54;;;;6499:36;6481:11;6493:2;6481:15;;;;;;;;;;:54;;;;6563:36;6545:11;6557:2;6545:15;;;;;;;;;;:54;;;;6627:36;6609:11;6621:2;6609:15;;;;;;;;;;:54;;;;6691:36;6673:11;6685:2;6673:15;;;;;;;;;;:54;;;;6755:36;6737:11;6749:2;6737:15;;;;;;;;;;:54;;;;6819:36;6801:11;6813:2;6801:15;;;;;;;;;;:54;;;;6883:36;6865:11;6877:2;6865:15;;;;;;;;;;:54;;;;6947:36;6929:11;6941:2;6929:15;;;;;;;;;;:54;;;;7011:36;6993:11;7005:2;6993:15;;;;;;;;;;:54;;;;7075:36;7057:11;7069:2;7057:15;;;;;;;;;;:54;;;;7139:36;7121:11;7133:2;7121:15;;;;;;;;;;:54;;;;7203:36;7185:11;7197:2;7185:15;;;;;;;;;;:54;;;;7267:36;7249:11;7261:2;7249:15;;;;;;;;;;:54;;;;7331:36;7313:11;7325:2;7313:15;;;;;;;;;;:54;;;;7395:36;7377:11;7389:2;7377:15;;;;;;;;;;:54;;;;7459:36;7441:11;7453:2;7441:15;;;;;;;;;;:54;;;;7523:36;7505:11;7517:2;7505:15;;;;;;;;;;:54;;;;7587:36;7569:11;7581:2;7569:15;;;;;;;;;;:54;;;;7651:36;7633:11;7645:2;7633:15;;;;;;;;;;:54;;;;7715:36;7697:11;7709:2;7697:15;;;;;;;;;;:54;;;;7779:36;7761:11;7773:2;7761:15;;;;;;;;;;:54;;;;7843:36;7825:11;7837:2;7825:15;;;;;;;;;;:54;;;;7907:36;7889:11;7901:2;7889:15;;;;;;;;;;:54;;;;7971:36;7953:11;7965:2;7953:15;;;;;;;;;;:54;;;;8035:36;8017:11;8029:2;8017:15;;;;;;;;;;:54;;;;8099:36;8081:11;8093:2;8081:15;;;;;;;;;;:54;;;;8163:36;8145:11;8157:2;8145:15;;;;;;;;;;:54;;;;8227:36;8209:11;8221:2;8209:15;;;;;;;;;;:54;;;;8291:36;8273:11;8285:2;8273:15;;;;;;;;;;:54;;;;8355:36;8337:11;8349:2;8337:15;;;;;;;;;;:54;;;;8420:36;8401:11;8413:3;8401:16;;;;;;;;;;:55;;;;8485:36;8466:11;8478:3;8466:16;;;;;;;;;;:55;;;;8550:36;8531:11;8543:3;8531:16;;;;;;;;;;:55;;;;8615:36;8596:11;8608:3;8596:16;;;;;;;;;;:55;;;;8680:36;8661:11;8673:3;8661:16;;;;;;;;;;:55;;;;8745:36;8726:11;8738:3;8726:16;;;;;;;;;;:55;;;;8810:36;8791:11;8803:3;8791:16;;;;;;;;;;:55;;;;8875:36;8856:11;8868:3;8856:16;;;;;;;;;;:55;;;;8940:36;8921:11;8933:3;8921:16;;;;;;;;;;:55;;;;9005:36;8986:11;8998:3;8986:16;;;;;;;;;;:55;;;;9070:36;9051:11;9063:3;9051:16;;;;;;;;;;:55;;;;9135:36;9116:11;9128:3;9116:16;;;;;;;;;;:55;;;;9200:36;9181:11;9193:3;9181:16;;;;;;;;;;:55;;;;9265:36;9246:11;9258:3;9246:16;;;;;;;;;;:55;;;;9330:36;9311:11;9323:3;9311:16;;;;;;;;;;:55;;;;9395:36;9376:11;9388:3;9376:16;;;;;;;;;;:55;;;;9460:36;9441:11;9453:3;9441:16;;;;;;;;;;:55;;;;9525:36;9506:11;9518:3;9506:16;;;;;;;;;;:55;;;;9590:36;9571:11;9583:3;9571:16;;;;;;;;;;:55;;;;9655:36;9636:11;9648:3;9636:16;;;;;;;;;;:55;;;;9720:36;9701:11;9713:3;9701:16;;;;;;;;;;:55;;;;9785:36;9766:11;9778:3;9766:16;;;;;;;;;;:55;;;;9850:36;9831:11;9843:3;9831:16;;;;;;;;;;:55;;;;9915:36;9896:11;9908:3;9896:16;;;;;;;;;;:55;;;;9980:36;9961:11;9973:3;9961:16;;;;;;;;;;:55;;;;10045:36;10026:11;10038:3;10026:16;;;;;;;;;;:55;;;;10110:36;10091:11;10103:3;10091:16;;;;;;;;;;:55;;;;10175:36;10156:11;10168:3;10156:16;;;;;;;;;;:55;;;;472:13:0;457:12;;:28;;;;;;;;;;;;;;;;;;406:86;664:33:6;670:10;682:14;664:5;;;:33;;;:::i;:::-;424:280;;;;;443:20:8;422:12;;:42;;;;;;;;;;;;;;;;;;145:326;;;;;;58:1071;;5538:235:7;5619:1;5608:7;:12;;;;5600:21;;;;;;;;5642:23;5659:5;5642:12;;:16;;;;;;:23;;;;;:::i;:::-;5627:12;:38;;;;5692:29;5715:5;5692:9;:18;5702:7;5692:18;;;;;;;;;;;;;;;;:22;;;;;;:29;;;;;:::i;:::-;5671:9;:18;5681:7;5671:18;;;;;;;;;;;;;;;:50;;;;5753:7;5732:36;;5749:1;5732:36;;;5762:5;5732:36;;;;;;;;;;;;;;;;;;5538:235;;:::o;1272:131:4:-;1330:7;1345:9;1361:1;1357;:5;1345:17;;1381:1;1376;:6;;1368:15;;;;;;;;1397:1;1390:8;;1272:131;;;;;:::o;58:1071:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "58:1071:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;58:1071:8;498:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;584:67:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;584:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;584:67:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2377:220:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2377:220:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:26:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;373:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;498:206;;8:9:-1;5:2;;;30:1;27;20:12;5:2;498:206:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;637:83:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;637:83:7;;;;;;;;;;;;;;;;;;;;;;;547:226:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;547:226:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2869:288:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2869:288:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1094:975:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1094:975:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;842:74:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;842:74:9;;;;;;;;;;;;;;;;;;;;;;;;;;;3608:330:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3608:330:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2754:1165:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2754:1165:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;562:29:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;562:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;562:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:98:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;917:98:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:127:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:5;;;;;;710:208:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;710:208:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:70:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:5;;;;;;;;;;;;;;;;;;;;;;;;;;;926:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:5;;;;;;;;;;;;;;;;;;;;;;;;;;;705:71:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;705:71:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;705:71:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1013:114:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1013:114:8;;;;;;;;;;;;;;;;;;;;;;;4394:340:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4394:340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1634:127;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1634:127:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:228:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;779:228:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;710:125:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;710:125:6;;;;;;;;;;;;;;;;;;;;;;;1332:150:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1332:150:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:101:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1561:101:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;113:25:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;113:25:8;;;;;;;;;;;;;;;;;;;;;;;;;;;584:67:9;620:6;641:5;634:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;584:67;:::o;2377:220:7:-;2442:4;2481:1;2462:21;;:7;:21;;;;2454:30;;;;;;;;2523:5;2491:8;:20;2500:10;2491:20;;;;;;;;;;;;;;;:29;2512:7;2491:29;;;;;;;;;;;;;;;:37;;;;2560:7;2539:36;;2548:10;2539:36;;;2569:5;2539:36;;;;;;;;;;;;;;;;;;2588:4;2581:11;;2377:220;;;;:::o;373:26:0:-;;;;;;;;;;;;;:::o;498:206::-;578:4;601:96;625:18;:16;:18::i;:::-;645:16;:14;:16::i;:::-;663:12;;;;;;;;;;;677:19;601:23;:96::i;:::-;594:103;;498:206;;;:::o;637:83:7:-;681:7;703:12;;696:19;;637:83;:::o;547:226:8:-;611:38;627:7;636:12;611:15;:38::i;:::-;;667:12;;;;;;;;;;;:25;;;693:10;713:4;720:7;667:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;667:61:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;667:61:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;667:61:8;;;;;;;;;;;;;;;;659:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;547:226;;:::o;2869:288:7:-;2972:4;3003:8;:14;3012:4;3003:14;;;;;;;;;;;;;;;:26;3018:10;3003:26;;;;;;;;;;;;;;;;2994:5;:35;;2986:44;;;;;;;;3066:37;3097:5;3066:8;:14;3075:4;3066:14;;;;;;;;;;;;;;;:26;3081:10;3066:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3037:8;:14;3046:4;3037:14;;;;;;;;;;;;;;;:26;3052:10;3037:26;;;;;;;;;;;;;;;:66;;;;3109:26;3119:4;3125:2;3129:5;3109:9;:26::i;:::-;3148:4;3141:11;;2869:288;;;;;:::o;1094:975:2:-;1269:7;1734:14;1758:15;1783:13;1961:22;1336:1;1326:7;:11;:34;;;;;1359:1;1341:15;:19;1326:34;:55;;;;;1380:1;1364:13;:17;;;1326:55;:93;;;;;415:7;1385:34;;:13;:34;;;;1326:93;1318:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1516:1;1498:14;:19;1494:58;;;1540:1;1533:8;;;;1494:58;415:7;1609:34;;:13;:34;;;1605:120;;;1666:48;1698:15;1666:27;1678:14;1666:7;:11;;:27;;;;:::i;:::-;:31;;:48;;;;:::i;:::-;1659:55;;;;1605:120;1799:35;1818:15;1799:14;:18;;:35;;;;:::i;:::-;1783:51;;1866:85;1885:5;1892:15;1909:13;415:7;1866:5;:85::i;:::-;1844:107;;;;;;;;2009:9;1986:32;;:19;1998:6;1986:7;:11;;:19;;;;:::i;:::-;:32;;;;;1961:57;;2035:27;2054:7;2035:14;:18;;:27;;;;:::i;:::-;2028:34;;1094:975;;;;;;;;;;;:::o;842:74:9:-;882:5;902:9;;;;;;;;;;;895:16;;842:74;:::o;3608:330:7:-;3708:4;3749:1;3730:21;;:7;:21;;;;3722:30;;;;;;;;3799:45;3833:10;3799:8;:20;3808:10;3799:20;;;;;;;;;;;;;;;:29;3820:7;3799:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;3759:8;:20;3768:10;3759:20;;;;;;;;;;;;;;;:29;3780:7;3759:29;;;;;;;;;;;;;;;:86;;;;3877:7;3856:60;;3865:10;3856:60;;;3886:8;:20;3895:10;3886:20;;;;;;;;;;;;;;;:29;3907:7;3886:29;;;;;;;;;;;;;;;;3856:60;;;;;;;;;;;;;;;;;;3929:4;3922:11;;3608:330;;;;:::o;2754:1165:2:-;2922:7;3542:14;3566:15;3591:13;3750:18;3808;2989:1;2979:7;:11;:34;;;;;3012:1;2994:15;:19;2979:34;:55;;;;;3033:1;3017:13;:17;;;2979:55;:93;;;;;415:7;3038:34;;:13;:34;;;;2979:93;:119;;;;;3091:7;3076:11;:22;;2979:119;2971:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3189:1;3174:11;:16;3170:55;;;3213:1;3206:8;;;;3170:55;3307:7;3292:11;:22;3288:75;;;3337:15;3330:22;;;;3288:75;415:7;3420:34;;:13;:34;;;3416:117;;;3477:45;3514:7;3477:32;3497:11;3477:15;:19;;:32;;;;:::i;:::-;:36;;:45;;;;:::i;:::-;3470:52;;;;3416:117;3607:24;3619:11;3607:7;:11;;:24;;;;:::i;:::-;3591:40;;3663:77;3682:7;3691:5;415:7;3717:13;3663:5;:77::i;:::-;3641:99;;;;;;;;3771:27;3791:6;3771:15;:19;;:27;;;;:::i;:::-;3750:48;;3848:9;3829:28;;:15;:28;;;;3808:49;;3874:38;3905:6;3874:26;3889:10;3874;:14;;:26;;;;:::i;:::-;:30;;:38;;;;:::i;:::-;3867:45;;2754:1165;;;;;;;;;;;;:::o;562:29:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;917:98:7:-;972:7;994:9;:16;1004:5;994:16;;;;;;;;;;;;;;;;987:23;;917:98;;;:::o;1273:127:5:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1330:40;;1351:6;;;;;;;;;;;1330:40;;;;;;;;;;;;1393:1;1376:6;;:19;;;;;;;;;;;;;;;;;;1273:127::o;710:208:0:-;793:4;816:95;836:18;:16;:18::i;:::-;856:16;:14;:16::i;:::-;874:12;;;;;;;;;;;888:22;816:19;:95::i;:::-;809:102;;710:208;;;:::o;639:70:5:-;676:7;698:6;;;;;;;;;;;691:13;;639:70;:::o;926:83::-;965:4;998:6;;;;;;;;;;;984:20;;:10;:20;;;977:27;;926:83;:::o;705:71:9:-;743:6;764:7;757:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;705:71;:::o;1013:114:8:-;1060:4;1083:12;;;;;;;;;;;:22;;;1114:4;1083:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1083:37:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1083:37:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1083:37:8;;;;;;;;;;;;;;;;1076:44;;1013:114;:::o;4394:340:7:-;4499:4;4540:1;4521:21;;:7;:21;;;;4513:30;;;;;;;;4590:50;4624:15;4590:8;:20;4599:10;4590:20;;;;;;;;;;;;;;;:29;4611:7;4590:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4550:8;:20;4559:10;4550:20;;;;;;;;;;;;;;;:29;4571:7;4550:29;;;;;;;;;;;;;;;:91;;;;4673:7;4652:60;;4661:10;4652:60;;;4682:8;:20;4691:10;4682:20;;;;;;;;;;;;;;;:29;4703:7;4682:29;;;;;;;;;;;;;;;;4652:60;;;;;;;;;;;;;;;;;;4725:4;4718:11;;4394:340;;;;:::o;1634:127::-;1695:4;1707:32;1717:10;1729:2;1733:5;1707:9;:32::i;:::-;1752:4;1745:11;;1634:127;;;;:::o;779:228:8:-;843:17;863:38;879:7;888:12;863:15;:38::i;:::-;843:58;;919:12;;;;;;;;;;;:21;;;941:10;953:12;919:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;919:47:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;919:47:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;919:47:8;;;;;;;;;;;;;;;;911:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:228;;;:::o;710:125:6:-;759:4;782:13;:11;:13::i;:::-;775:20;;710:125;:::o;1332:150:7:-;1429:7;1453:8;:15;1462:5;1453:15;;;;;;;;;;;;;;;:24;1469:7;1453:24;;;;;;;;;;;;;;;;1446:31;;1332:150;;;;:::o;1561:101:5:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;113:25:8:-;;;;;;;;;;;;;:::o;841:384:6:-;916:4;993:17;951:1;940:8;:12;932:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1013:33;1037:8;1013:23;:33::i;:::-;993:53;;1080:10;1064:12;:26;;1056:35;;;;;;;;1101:31;1107:10;1119:12;1101:5;:31::i;:::-;1147:42;1154:10;1166:12;1180:8;1147:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1206:12;1199:19;;841:384;;;;;:::o;1078:131:4:-;1136:7;1172:9;1164:1;1159;:6;;1151:15;;;;;;;;1188:1;1184;:5;1172:17;;1203:1;1196:8;;1078:131;;;;;:::o;4934:277:7:-;5026:9;:15;5036:4;5026:15;;;;;;;;;;;;;;;;5017:5;:24;;5009:33;;;;;;;;5070:1;5056:16;;:2;:16;;;;5048:25;;;;;;;;5098:26;5118:5;5098:9;:15;5108:4;5098:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5080:9;:15;5090:4;5080:15;;;;;;;;;;;;;;;:44;;;;5146:24;5164:5;5146:9;:13;5156:2;5146:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5130:9;:13;5140:2;5130:13;;;;;;;;;;;;;;;:40;;;;5196:2;5181:25;;5190:4;5181:25;;;5200:5;5181:25;;;;;;;;;;;;;;;;;;4934:277;;;:::o;204:381:4:-;262:7;523:9;491:1;486;:6;482:35;;;509:1;502:8;;;;482:35;539:1;535;:5;523:17;;563:1;558;554;:5;;;;;;;;:10;546:19;;;;;;;;579:1;572:8;;204:381;;;;;;:::o;695:270::-;753:7;846:9;780:1;776;:5;768:14;;;;;;;;862:1;858;:5;;;;;;;;846:17;;959:1;952:8;;695:270;;;;;:::o;1272:131::-;1330:7;1345:9;1361:1;1357;:5;1345:17;;1381:1;1376;:6;;1368:15;;;;;;;;1397:1;1390:8;;1272:131;;;;;:::o;11604:892:3:-;11740:7;11749:5;11901:15;11926:12;12122:23;12316:15;1161:35;11778:6;:16;11770:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11851:6;11841;:16;;11833:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11960:6;1009:35;11941:6;:16;:25;;;;;;;;11926:40;;1585:35;11980:4;:22;11976:136;;;12028:16;12039:4;12028:10;:16::i;:::-;12018:26;;11976:136;;;12085:16;12096:4;12085:10;:16::i;:::-;12075:26;;11976:136;12166:5;12148:23;;12158:5;12148:15;;:7;:15;:23;;;;;;;;12122:49;;1669:35;12185:15;:33;12181:309;;;12242:27;12253:15;12242:10;:27::i;:::-;772:3;12234:51;;;;;;12181:309;12334:42;12360:15;12334:25;:42::i;:::-;12316:60;;12398:69;12445:9;772:3;12429:25;12409:46;;:15;:46;;;;;12457:9;12398:10;:69::i;:::-;12469:9;12390:89;;;;11604:892;;;;;;;;;;;;:::o;1231:457:6:-;1305:4;1463:17;1339:1;1329:7;:11;1321:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:7;1387:21;1397:10;1387:9;:21::i;:::-;:32;;1379:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:32;1507:7;1483:23;:32::i;:::-;1463:52;;1549:10;1533:12;:26;;1525:35;;;;;;;;1570:26;1576:10;1588:7;1570:5;:26::i;:::-;1611:41;1618:10;1630:7;1639:12;1611:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1669:12;1662:19;;1231:457;;;;;:::o;1796:169:5:-;1885:1;1865:22;;:8;:22;;;;1857:31;;;;;;;;1928:8;1899:38;;1920:6;;;;;;;;;;;1899:38;;;;;;;;;;;;1952:8;1943:6;;:17;;;;;;;;;;;;;;;;;;1796:169;:::o;5538:235:7:-;5619:1;5608:7;:12;;;;5600:21;;;;;;;;5642:23;5659:5;5642:12;;:16;;:23;;;;:::i;:::-;5627:12;:38;;;;5692:29;5715:5;5692:9;:18;5702:7;5692:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;5671:9;:18;5681:7;5671:18;;;;;;;;;;;;;;;:50;;;;5753:7;5732:36;;5749:1;5732:36;;;5762:5;5732:36;;;;;;;;;;;;;;;;;;5538:235;;:::o;19589:2397:3:-;19643:7;19662:11;19688:9;19707;19726;19676:1;19662:15;;19755:34;19750:1;:39;;19746:143;;;19799:34;19792:41;;;;19853:34;1009:35;19839:1;:11;:48;;;;;;;;19835:52;;19746:143;19907:34;19902:1;:39;;19898:143;;;19951:34;19944:41;;;;20005:34;1009:35;19991:1;:11;:48;;;;;;;;19987:52;;19898:143;20059:34;20054:1;:39;;20050:143;;;20103:34;20096:41;;;;20157:34;1009:35;20143:1;:11;:48;;;;;;;;20139:52;;20050:143;20211:34;20206:1;:39;;20202:143;;;20255:34;20248:41;;;;20309:34;1009:35;20295:1;:11;:48;;;;;;;;20291:52;;20202:143;20363:34;20358:1;:39;;20354:143;;;20407:34;20400:41;;;;20461:34;1009:35;20447:1;:11;:48;;;;;;;;20443:52;;20354:143;20515:34;20510:1;:39;;20506:143;;;20559:34;20552:41;;;;20613:34;1009:35;20599:1;:11;:48;;;;;;;;20595:52;;20506:143;20667:34;20662:1;:39;;20658:143;;;20711:34;20704:41;;;;20765:34;1009:35;20751:1;:11;:48;;;;;;;;20747:52;;20658:143;20819:34;20814:1;:39;;20810:143;;;20863:34;20856:41;;;;20917:34;1009:35;20903:1;:11;:48;;;;;;;;20899:52;;20810:143;1009:35;20971:1;:11;20967:15;;;20963:19;;1009:35;21000:1;20996;:5;:15;;;;;;;;20992:19;;21076:35;21071:1;21033:35;:39;21028:1;:45;:83;;;;;;;;21021:90;;;;1009:35;21121:1;21117;:5;:15;;;;;;;;21113:19;;21197:35;21192:1;21154:35;:39;21149:1;:45;:83;;;;;;;;21142:90;;;;1009:35;21242:1;21238;:5;:15;;;;;;;;21234:19;;21318:35;21313:1;21275:35;:39;21270:1;:45;:83;;;;;;;;21263:90;;;;1009:35;21363:1;21359;:5;:15;;;;;;;;21355:19;;21439:35;21434:1;21396:35;:39;21391:1;:45;:83;;;;;;;;21384:90;;;;1009:35;21484:1;21480;:5;:15;;;;;;;;21476:19;;21560:35;21555:1;21517:35;:39;21512:1;:45;:83;;;;;;;;21505:90;;;;1009:35;21605:1;21601;:5;:15;;;;;;;;21597:19;;21681:35;21676:1;21638:35;:39;21633:1;:45;:83;;;;;;;;21626:90;;;;1009:35;21726:1;21722;:5;:15;;;;;;;;21718:19;;21802:35;21797:1;21759:35;:39;21754:1;:45;:83;;;;;;;;21747:90;;;;1009:35;21847:1;21843;:5;:15;;;;;;;;21839:19;;21923:35;21918:1;21880:35;:39;21875:1;:45;:83;;;;;;;;21868:90;;;;21976:3;21969:10;;19589:2397;;;;;;;:::o;12661:826::-;12716:7;12735:11;12760:9;12908:11;13165:7;12749:1;12735:15;;12772:2;12760:14;;1085:35;12880:1;:12;;12876:152;;;12922:22;1009:35;12932:1;:11;;;;;;;;12922:9;:22::i;:::-;12908:36;;12964:5;12958:11;;;;;;;;;;1009:35;13002:5;:15;;;12996:21;;12876:152;1009:35;13133:1;:11;13129:297;;;772:3;13165:23;;13160:256;13194:1;13190;:5;;;13160:256;;;1009:35;13229:1;13225;:5;13224:17;;;;;;;;13220:21;;1085:35;13280:1;:12;;13276:126;;;13322:1;13316:7;;;;;;;;13381:1;13377;:5;13369:14;;629:1;13369:14;;;;13362:21;;;;13276:126;13197:3;;;;;;13160:256;;;13129:297;1398:33;1316;13443:3;:19;:37;;;;;;;;13436:44;;12661:826;;;;;;;:::o;22157:2980::-;22211:7;22230:11;22256:9;22275;22244:1;22230:15;;22307:34;22303:1;:38;;;;;;;;22299:42;;;22295:46;;1009:35;22359:1;22355;:5;:15;;;;;;;;22351:19;;22383:18;22379:1;:22;22372:29;;;;1009:35;22445:1;22441;:5;:15;;;;;;;;22437:19;;22469:18;22465:1;:22;22458:29;;;;1009:35;22531:1;22527;:5;:15;;;;;;;;22523:19;;22555:18;22551:1;:22;22544:29;;;;1009:35;22617:1;22613;:5;:15;;;;;;;;22609:19;;22641:18;22637:1;:22;22630:29;;;;1009:35;22703:1;22699;:5;:15;;;;;;;;22695:19;;22727:18;22723:1;:22;22716:29;;;;1009:35;22789:1;22785;:5;:15;;;;;;;;22781:19;;22813:18;22809:1;:22;22802:29;;;;1009:35;22875:1;22871;:5;:15;;;;;;;;22867:19;;22899:18;22895:1;:22;22888:29;;;;1009:35;22961:1;22957;:5;:15;;;;;;;;22953:19;;22985:18;22981:1;:22;22974:29;;;;1009:35;23047:1;23043;:5;:15;;;;;;;;23039:19;;23071:18;23067:1;:22;23060:29;;;;1009:35;23133:1;23129;:5;:15;;;;;;;;23125:19;;23157:18;23153:1;:22;23146:29;;;;1009:35;23219:1;23215;:5;:15;;;;;;;;23211:19;;23243:18;23239:1;:22;23232:29;;;;1009:35;23305:1;23301;:5;:15;;;;;;;;23297:19;;23329:18;23325:1;:22;23318:29;;;;1009:35;23391:1;23387;:5;:15;;;;;;;;23383:19;;23415:18;23411:1;:22;23404:29;;;;1009:35;23477:1;23473;:5;:15;;;;;;;;23469:19;;23501:18;23497:1;:22;23490:29;;;;1009:35;23563:1;23559;:5;:15;;;;;;;;23555:19;;23587:18;23583:1;:22;23576:29;;;;1009:35;23649:1;23645;:5;:15;;;;;;;;23641:19;;23673:18;23669:1;:22;23662:29;;;;1009:35;23735:1;23731;:5;:15;;;;;;;;23727:19;;23759:18;23755:1;:22;23748:29;;;;1009:35;23821:1;23817;:5;:15;;;;;;;;23813:19;;23845:18;23841:1;:22;23834:29;;;;1009:35;23907:1;23903;:5;:15;;;;;;;;23899:19;;23931:18;23927:1;:22;23920:29;;;;1009:35;24018:1;23997:18;23991:3;:24;;;;;;;;:28;:38;23985:44;;24139:1;24099:35;24095:1;:39;24094:46;;24090:137;;;24192:35;24154;24148:3;:41;:79;;;;;;;;24142:85;;24090:137;24286:1;24246:35;24242:1;:39;24241:46;;24237:137;;;24339:35;24301;24295:3;:41;:79;;;;;;;;24289:85;;24237:137;24433:1;24393:35;24389:1;:39;24388:46;;24384:137;;;24486:35;24448;24442:3;:41;:79;;;;;;;;24436:85;;24384:137;24580:1;24540:35;24536:1;:39;24535:46;;24531:137;;;24633:35;24595;24589:3;:41;:79;;;;;;;;24583:85;;24531:137;24727:1;24687:35;24683:1;:39;24682:46;;24678:137;;;24780:35;24742;24736:3;:41;:79;;;;;;;;24730:85;;24678:137;24874:1;24834:35;24830:1;:39;24829:46;;24825:137;;;24927:35;24889;24883:3;:41;:79;;;;;;;;24877:85;;24825:137;25021:1;24981:35;24977:1;:39;24976:46;;24972:137;;;25074:35;25036;25030:3;:41;:79;;;;;;;;25024:85;;24972:137;25127:3;25120:10;;22157:2980;;;;;;:::o;14495:508::-;14569:5;14590:8;14624;14693:9;725:2;14590:24;;772:3;14624:24;;14659:179;14675:2;14666:11;;14671:1;14666:2;:6;:11;;;14659:179;;;14717:1;14711:2;14706;:7;14705:13;;;;;;;;;;14693:25;;14756:2;14736:11;14748:3;14736:16;;;;;;;;;;;;;:22;;14732:95;;;14781:3;14776:8;;14732:95;;;14824:3;14819:8;;14732:95;14659:179;;;14871:2;14852:11;14864:2;14852:15;;;;;;;;;;;;;:21;;14848:48;;;14894:2;14887:9;;;;14848:48;14929:2;14910:11;14922:2;14910:15;;;;;;;;;;;;;:21;;14906:48;;;14952:2;14945:9;;;;14906:48;14972:5;14965:13;;;;;;14995:1;14988:8;;14495:508;;;;;;;:::o;15587:3826::-;15660:7;15679:10;15704:11;15692:2;15679:15;;15718:1;15704:15;;15748:10;15735:23;;15741:2;15736;:7;15735:23;;;;;15730:28;;15772:33;15767:2;:38;15760:45;;;;15859:10;15846:23;;15852:2;15847;:7;15846:23;;;;;15841:28;;15883:33;15878:2;:38;15871:45;;;;15970:10;15957:23;;15963:2;15958;:7;15957:23;;;;;15952:28;;15994:33;15989:2;:38;15982:45;;;;16081:10;16068:23;;16074:2;16069;:7;16068:23;;;;;16063:28;;16105:33;16100:2;:38;16093:45;;;;16192:10;16179:23;;16185:2;16180;:7;16179:23;;;;;16174:28;;16216:33;16211:2;:38;16204:45;;;;16303:10;16290:23;;16296:2;16291;:7;16290:23;;;;;16285:28;;16327:33;16322:2;:38;16315:45;;;;16414:10;16401:23;;16407:2;16402;:7;16401:23;;;;;16396:28;;16438:33;16433:2;:38;16426:45;;;;16525:10;16512:23;;16518:2;16513;:7;16512:23;;;;;16507:28;;16549:33;16544:2;:38;16537:45;;;;16636:10;16623:23;;16629:2;16624;:7;16623:23;;;;;16618:28;;16660:33;16655:2;:38;16648:45;;;;16747:10;16734:23;;16740:2;16735;:7;16734:23;;;;;16729:28;;16771:33;16766:2;:38;16759:45;;;;16858:10;16845:23;;16851:2;16846;:7;16845:23;;;;;16840:28;;16882:33;16877:2;:38;16870:45;;;;16969:10;16956:23;;16962:2;16957;:7;16956:23;;;;;16951:28;;16993:33;16988:2;:38;16981:45;;;;17080:10;17067:23;;17073:2;17068;:7;17067:23;;;;;17062:28;;17104:33;17099:2;:38;17092:45;;;;17191:10;17178:23;;17184:2;17179;:7;17178:23;;;;;17173:28;;17215:33;17210:2;:38;17203:45;;;;17302:10;17289:23;;17295:2;17290;:7;17289:23;;;;;17284:28;;17326:33;17321:2;:38;17314:45;;;;17413:10;17400:23;;17406:2;17401;:7;17400:23;;;;;17395:28;;17437:33;17432:2;:38;17425:45;;;;17524:10;17511:23;;17517:2;17512;:7;17511:23;;;;;17506:28;;17548:33;17543:2;:38;17536:45;;;;17635:10;17622:23;;17628:2;17623;:7;17622:23;;;;;17617:28;;17659:33;17654:2;:38;17647:45;;;;17746:10;17733:23;;17739:2;17734;:7;17733:23;;;;;17728:28;;17770:33;17765:2;:38;17758:45;;;;17857:10;17844:23;;17850:2;17845;:7;17844:23;;;;;17839:28;;17881:33;17876:2;:38;17869:45;;;;17968:10;17955:23;;17961:2;17956;:7;17955:23;;;;;17950:28;;17992:33;17987:2;:38;17980:45;;;;18079:10;18066:23;;18072:2;18067;:7;18066:23;;;;;18061:28;;18103:33;18098:2;:38;18091:45;;;;18190:10;18177:23;;18183:2;18178;:7;18177:23;;;;;18172:28;;18214:33;18209:2;:38;18202:45;;;;18301:10;18288:23;;18294:2;18289;:7;18288:23;;;;;18283:28;;18325:33;18320:2;:38;18313:45;;;;18412:10;18399:23;;18405:2;18400;:7;18399:23;;;;;18394:28;;18436:33;18431:2;:38;18424:45;;;;18523:10;18510:23;;18516:2;18511;:7;18510:23;;;;;18505:28;;18547:33;18542:2;:38;18535:45;;;;18634:10;18621:23;;18627:2;18622;:7;18621:23;;;;;18616:28;;18658:33;18653:2;:38;18646:45;;;;18745:10;18732:23;;18738:2;18733;:7;18732:23;;;;;18727:28;;18769:33;18764:2;:38;18757:45;;;;18856:10;18843:23;;18849:2;18844;:7;18843:23;;;;;18838:28;;18880:33;18875:2;:38;18868:45;;;;18967:10;18954:23;;18960:2;18955;:7;18954:23;;;;;18949:28;;18991:33;18986:2;:38;18979:45;;;;19078:10;19065:23;;19071:2;19066;:7;19065:23;;;;;19060:28;;19102:33;19097:2;:38;19090:45;;;;19189:10;19176:23;;19182:2;19177;:7;19176:23;;;;;19171:28;;19213:33;19208:2;:38;19201:45;;;;19345:10;19338:17;;629:1;19338:17;;;;19332:2;19296:33;19290:3;:39;;;;;;;;:44;:66;19283:73;;15587:3826;;;;;;:::o;5985:278:7:-;6066:1;6055:7;:12;;;;6047:21;;;;;;;;6091:9;:18;6101:7;6091:18;;;;;;;;;;;;;;;;6082:5;:27;;6074:36;;;;;;;;6132:23;6149:5;6132:12;;:16;;:23;;;;:::i;:::-;6117:12;:38;;;;6182:29;6205:5;6182:9;:18;6192:7;6182:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6161:9;:18;6171:7;6161:18;;;;;;;;;;;;;;;:50;;;;6248:1;6222:36;;6231:7;6222:36;;;6252:5;6222:36;;;;;;;;;;;;;;;;;;5985:278;;:::o;13602:532:3:-;13656:5;13673:9;13696;13935:7;13685:1;13673:13;;13708:2;13696:14;;13729:3;13725:1;:7;13721:386;;;13784:80;13795:1;13791;:5;13784:80;;;13822:1;13816:7;;;;;;;;13848:1;13841:8;;;;13784:80;;;13721:386;;;13945:3;13935:13;;13930:167;13954:1;13950;:5;;;13930:167;;;14001:1;13994:8;;629:1;13994:8;;;;13988:1;:15;;13984:99;;;14033:1;14027:7;;;;;;;;;;14063:1;14056:8;;;;13984:99;13963:1;13957:7;;;;;;;;;;13930:167;;;13721:386;14124:3;14117:10;;13602:532;;;;;;:::o",
  "source": "pragma solidity 0.4.25;\n\nimport \"./ContinuousToken.sol\";\n\ncontract ERC20ContinuousToken is ContinuousToken {\n    ERC20 public reserveToken;\n\n    constructor(\n        string _name,\n        string _symbol,\n        uint8 _decimals,\n        uint _initialSupply,\n        uint32 _reserveRatio,\n        address _reserveTokenAddress\n    ) public ContinuousToken(_name, _symbol, _decimals, _initialSupply, _reserveRatio) {\n        reserveToken = ERC20(_reserveTokenAddress);\n    }\n\n    function () public { revert(\"Cannot call fallback function.\"); }\n\n    function mint(uint _amount, uint _minReceived) public {\n        _continuousMint(_amount, _minReceived);\n        require(reserveToken.transferFrom(msg.sender, address(this), _amount), \"mint() ERC20.transferFrom failed.\");\n    }\n\n    function burn(uint _amount, uint _minReceived) public {\n        uint returnAmount = _continuousBurn(_amount, _minReceived);\n        require(reserveToken.transfer(msg.sender, returnAmount), \"burn() ERC20.transfer failed.\");\n    }\n\n    function reserveBalance() public view returns (uint) {\n        return reserveToken.balanceOf(address(this));\n    }\n}",
  "sourcePath": "/Users/earth/Desktop/action-token/contracts/token/ERC20ContinuousToken.sol",
  "ast": {
    "absolutePath": "/Users/earth/Desktop/action-token/contracts/token/ERC20ContinuousToken.sol",
    "exportedSymbols": {
      "ERC20ContinuousToken": [
        3434
      ]
    },
    "id": 3435,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3327,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/earth/Desktop/action-token/contracts/token/ContinuousToken.sol",
        "file": "./ContinuousToken.sol",
        "id": 3328,
        "nodeType": "ImportDirective",
        "scope": 3435,
        "sourceUnit": 2882,
        "src": "25:31:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3329,
              "name": "ContinuousToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2881,
              "src": "91:15:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContinuousToken_$2881",
                "typeString": "contract ContinuousToken"
              }
            },
            "id": 3330,
            "nodeType": "InheritanceSpecifier",
            "src": "91:15:8"
          }
        ],
        "contractDependencies": [
          64,
          81,
          294,
          2474,
          2711,
          2881,
          3325,
          3492,
          3561
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3434,
        "linearizedBaseContracts": [
          3434,
          2881,
          64,
          294,
          2474,
          81,
          3492,
          3325,
          3561,
          2711
        ],
        "name": "ERC20ContinuousToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3332,
            "name": "reserveToken",
            "nodeType": "VariableDeclaration",
            "scope": 3434,
            "src": "113:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$3325",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 3331,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3325,
              "src": "113:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3325",
                "typeString": "contract ERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3360,
              "nodeType": "Block",
              "src": "412:59:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3354,
                      "name": "reserveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3332,
                      "src": "422:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3325",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3356,
                          "name": "_reserveTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3344,
                          "src": "443:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3355,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3325,
                        "src": "437:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$3325_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 3357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "437:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3325",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "422:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3325",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 3359,
                  "nodeType": "ExpressionStatement",
                  "src": "422:42:8"
                }
              ]
            },
            "documentation": null,
            "id": 3361,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3347,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3334,
                    "src": "354:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3348,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3336,
                    "src": "361:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3349,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3338,
                    "src": "370:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3350,
                    "name": "_initialSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3340,
                    "src": "381:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3351,
                    "name": "_reserveRatio",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3342,
                    "src": "397:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 3352,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3346,
                  "name": "ContinuousToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2881,
                  "src": "338:15:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContinuousToken_$2881_$",
                    "typeString": "type(contract ContinuousToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "338:73:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3334,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "166:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3333,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "166:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3336,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "188:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3335,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3338,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "212:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3337,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3340,
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "237:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3339,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "237:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3342,
                  "name": "_reserveRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "266:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3341,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3344,
                  "name": "_reserveTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "296:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "156:174:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:8"
            },
            "scope": 3434,
            "src": "145:326:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3368,
              "nodeType": "Block",
              "src": "496:45:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2e",
                        "id": 3365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "505:32:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35adf5099068bfc19dbe57ce7e8bce94edb806b4913b286575991df24351ec00",
                          "typeString": "literal_string \"Cannot call fallback function.\""
                        },
                        "value": "Cannot call fallback function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_35adf5099068bfc19dbe57ce7e8bce94edb806b4913b286575991df24351ec00",
                          "typeString": "literal_string \"Cannot call fallback function.\""
                        }
                      ],
                      "id": 3364,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3581,
                        3582
                      ],
                      "referencedDeclaration": 3582,
                      "src": "498:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 3366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3367,
                  "nodeType": "ExpressionStatement",
                  "src": "498:40:8"
                }
              ]
            },
            "documentation": null,
            "id": 3369,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:2:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:0:8"
            },
            "scope": 3434,
            "src": "477:64:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3394,
              "nodeType": "Block",
              "src": "601:172:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3377,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3371,
                        "src": "627:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3378,
                        "name": "_minReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3373,
                        "src": "636:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3376,
                      "name": "_continuousMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2826,
                      "src": "611:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 3379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3380,
                  "nodeType": "ExpressionStatement",
                  "src": "611:38:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3384,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3576,
                              "src": "693:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "693:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3387,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3609,
                                "src": "713:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20ContinuousToken_$3434",
                                  "typeString": "contract ERC20ContinuousToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20ContinuousToken_$3434",
                                  "typeString": "contract ERC20ContinuousToken"
                                }
                              ],
                              "id": 3386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "705:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 3388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "705:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3389,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3371,
                            "src": "720:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3382,
                            "name": "reserveToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "667:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$3325",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 3383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3041,
                          "src": "667:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "667:61:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e7428292045524332302e7472616e7366657246726f6d206661696c65642e",
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "730:35:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f78d036144c545e53b563b9c14b24232b4d2b68ec3423cd7c70d3540dab2545",
                          "typeString": "literal_string \"mint() ERC20.transferFrom failed.\""
                        },
                        "value": "mint() ERC20.transferFrom failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f78d036144c545e53b563b9c14b24232b4d2b68ec3423cd7c70d3540dab2545",
                          "typeString": "literal_string \"mint() ERC20.transferFrom failed.\""
                        }
                      ],
                      "id": 3381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3579,
                        3580
                      ],
                      "referencedDeclaration": 3580,
                      "src": "659:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:107:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3393,
                  "nodeType": "ExpressionStatement",
                  "src": "659:107:8"
                }
              ]
            },
            "documentation": null,
            "id": 3395,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3371,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3395,
                  "src": "561:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3370,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3373,
                  "name": "_minReceived",
                  "nodeType": "VariableDeclaration",
                  "scope": 3395,
                  "src": "575:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3372,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "560:33:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:8"
            },
            "scope": 3434,
            "src": "547:226:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3419,
              "nodeType": "Block",
              "src": "833:174:8",
              "statements": [
                {
                  "assignments": [
                    3403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3403,
                      "name": "returnAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 3420,
                      "src": "843:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3402,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "843:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3408,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3405,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3397,
                        "src": "879:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3406,
                        "name": "_minReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3399,
                        "src": "888:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3404,
                      "name": "_continuousBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2880,
                      "src": "863:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 3407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "863:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "843:58:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3412,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3576,
                              "src": "941:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "941:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3414,
                            "name": "returnAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3403,
                            "src": "953:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3410,
                            "name": "reserveToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "919:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$3325",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 3411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2957,
                          "src": "919:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "919:47:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6275726e28292045524332302e7472616e73666572206661696c65642e",
                        "id": 3416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "968:31:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f34029d5c2760d692c7b8cd131aa9b926cc6b46904efb1b3fc5fa1ab65083926",
                          "typeString": "literal_string \"burn() ERC20.transfer failed.\""
                        },
                        "value": "burn() ERC20.transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f34029d5c2760d692c7b8cd131aa9b926cc6b46904efb1b3fc5fa1ab65083926",
                          "typeString": "literal_string \"burn() ERC20.transfer failed.\""
                        }
                      ],
                      "id": 3409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3579,
                        3580
                      ],
                      "referencedDeclaration": 3580,
                      "src": "911:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "911:89:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3418,
                  "nodeType": "ExpressionStatement",
                  "src": "911:89:8"
                }
              ]
            },
            "documentation": null,
            "id": 3420,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3397,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3420,
                  "src": "793:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3396,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3399,
                  "name": "_minReceived",
                  "nodeType": "VariableDeclaration",
                  "scope": 3420,
                  "src": "807:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3398,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "792:33:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "833:0:8"
            },
            "scope": 3434,
            "src": "779:228:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3432,
              "nodeType": "Block",
              "src": "1066:61:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3428,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3609,
                            "src": "1114:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20ContinuousToken_$3434",
                              "typeString": "contract ERC20ContinuousToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20ContinuousToken_$3434",
                              "typeString": "contract ERC20ContinuousToken"
                            }
                          ],
                          "id": 3427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1106:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1106:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3425,
                        "name": "reserveToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3332,
                        "src": "1083:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3325",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 3426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2922,
                      "src": "1083:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3424,
                  "id": 3431,
                  "nodeType": "Return",
                  "src": "1076:44:8"
                }
              ]
            },
            "documentation": null,
            "id": 3433,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "reserveBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1036:2:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3423,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "1060:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3422,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1059:6:8"
            },
            "scope": 3434,
            "src": "1013:114:8",
            "stateMutability": "view",
            "superFunction": 63,
            "visibility": "public"
          }
        ],
        "scope": 3435,
        "src": "58:1071:8"
      }
    ],
    "src": "0:1129:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/earth/Desktop/action-token/contracts/token/ERC20ContinuousToken.sol",
    "exportedSymbols": {
      "ERC20ContinuousToken": [
        3434
      ]
    },
    "id": 3435,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3327,
        "literals": [
          "solidity",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "/Users/earth/Desktop/action-token/contracts/token/ContinuousToken.sol",
        "file": "./ContinuousToken.sol",
        "id": 3328,
        "nodeType": "ImportDirective",
        "scope": 3435,
        "sourceUnit": 2882,
        "src": "25:31:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3329,
              "name": "ContinuousToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2881,
              "src": "91:15:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContinuousToken_$2881",
                "typeString": "contract ContinuousToken"
              }
            },
            "id": 3330,
            "nodeType": "InheritanceSpecifier",
            "src": "91:15:8"
          }
        ],
        "contractDependencies": [
          64,
          81,
          294,
          2474,
          2711,
          2881,
          3325,
          3492,
          3561
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3434,
        "linearizedBaseContracts": [
          3434,
          2881,
          64,
          294,
          2474,
          81,
          3492,
          3325,
          3561,
          2711
        ],
        "name": "ERC20ContinuousToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3332,
            "name": "reserveToken",
            "nodeType": "VariableDeclaration",
            "scope": 3434,
            "src": "113:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$3325",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 3331,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3325,
              "src": "113:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3325",
                "typeString": "contract ERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3360,
              "nodeType": "Block",
              "src": "412:59:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3354,
                      "name": "reserveToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3332,
                      "src": "422:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3325",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3356,
                          "name": "_reserveTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3344,
                          "src": "443:20:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3355,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3325,
                        "src": "437:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$3325_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 3357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "437:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3325",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "422:42:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3325",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 3359,
                  "nodeType": "ExpressionStatement",
                  "src": "422:42:8"
                }
              ]
            },
            "documentation": null,
            "id": 3361,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3347,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3334,
                    "src": "354:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3348,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3336,
                    "src": "361:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3349,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3338,
                    "src": "370:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3350,
                    "name": "_initialSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3340,
                    "src": "381:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3351,
                    "name": "_reserveRatio",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3342,
                    "src": "397:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 3352,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3346,
                  "name": "ContinuousToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2881,
                  "src": "338:15:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ContinuousToken_$2881_$",
                    "typeString": "type(contract ContinuousToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "338:73:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3334,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "166:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3333,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "166:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3336,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "188:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3335,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3338,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "212:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 3337,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "212:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3340,
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "237:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3339,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "237:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3342,
                  "name": "_reserveRatio",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "266:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3341,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3344,
                  "name": "_reserveTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3361,
                  "src": "296:28:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "156:174:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:8"
            },
            "scope": 3434,
            "src": "145:326:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3368,
              "nodeType": "Block",
              "src": "496:45:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f742063616c6c2066616c6c6261636b2066756e6374696f6e2e",
                        "id": 3365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "505:32:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35adf5099068bfc19dbe57ce7e8bce94edb806b4913b286575991df24351ec00",
                          "typeString": "literal_string \"Cannot call fallback function.\""
                        },
                        "value": "Cannot call fallback function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_35adf5099068bfc19dbe57ce7e8bce94edb806b4913b286575991df24351ec00",
                          "typeString": "literal_string \"Cannot call fallback function.\""
                        }
                      ],
                      "id": 3364,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3581,
                        3582
                      ],
                      "referencedDeclaration": 3582,
                      "src": "498:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 3366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "498:40:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3367,
                  "nodeType": "ExpressionStatement",
                  "src": "498:40:8"
                }
              ]
            },
            "documentation": null,
            "id": 3369,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:2:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "496:0:8"
            },
            "scope": 3434,
            "src": "477:64:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3394,
              "nodeType": "Block",
              "src": "601:172:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3377,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3371,
                        "src": "627:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3378,
                        "name": "_minReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3373,
                        "src": "636:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3376,
                      "name": "_continuousMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2826,
                      "src": "611:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 3379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3380,
                  "nodeType": "ExpressionStatement",
                  "src": "611:38:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3384,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3576,
                              "src": "693:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "693:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 3387,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3609,
                                "src": "713:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20ContinuousToken_$3434",
                                  "typeString": "contract ERC20ContinuousToken"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20ContinuousToken_$3434",
                                  "typeString": "contract ERC20ContinuousToken"
                                }
                              ],
                              "id": 3386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "705:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 3388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "705:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3389,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3371,
                            "src": "720:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3382,
                            "name": "reserveToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "667:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$3325",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 3383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3041,
                          "src": "667:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "667:61:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d696e7428292045524332302e7472616e7366657246726f6d206661696c65642e",
                        "id": 3391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "730:35:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f78d036144c545e53b563b9c14b24232b4d2b68ec3423cd7c70d3540dab2545",
                          "typeString": "literal_string \"mint() ERC20.transferFrom failed.\""
                        },
                        "value": "mint() ERC20.transferFrom failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f78d036144c545e53b563b9c14b24232b4d2b68ec3423cd7c70d3540dab2545",
                          "typeString": "literal_string \"mint() ERC20.transferFrom failed.\""
                        }
                      ],
                      "id": 3381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3579,
                        3580
                      ],
                      "referencedDeclaration": 3580,
                      "src": "659:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "659:107:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3393,
                  "nodeType": "ExpressionStatement",
                  "src": "659:107:8"
                }
              ]
            },
            "documentation": null,
            "id": 3395,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3371,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3395,
                  "src": "561:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3370,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3373,
                  "name": "_minReceived",
                  "nodeType": "VariableDeclaration",
                  "scope": 3395,
                  "src": "575:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3372,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "575:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "560:33:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3375,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:8"
            },
            "scope": 3434,
            "src": "547:226:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3419,
              "nodeType": "Block",
              "src": "833:174:8",
              "statements": [
                {
                  "assignments": [
                    3403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3403,
                      "name": "returnAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 3420,
                      "src": "843:17:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3402,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "843:4:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3408,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3405,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3397,
                        "src": "879:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3406,
                        "name": "_minReceived",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3399,
                        "src": "888:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3404,
                      "name": "_continuousBurn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2880,
                      "src": "863:15:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) returns (uint256)"
                      }
                    },
                    "id": 3407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "863:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "843:58:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3412,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3576,
                              "src": "941:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "941:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 3414,
                            "name": "returnAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3403,
                            "src": "953:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3410,
                            "name": "reserveToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3332,
                            "src": "919:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$3325",
                              "typeString": "contract ERC20"
                            }
                          },
                          "id": 3411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2957,
                          "src": "919:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 3415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "919:47:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6275726e28292045524332302e7472616e73666572206661696c65642e",
                        "id": 3416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "968:31:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f34029d5c2760d692c7b8cd131aa9b926cc6b46904efb1b3fc5fa1ab65083926",
                          "typeString": "literal_string \"burn() ERC20.transfer failed.\""
                        },
                        "value": "burn() ERC20.transfer failed."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f34029d5c2760d692c7b8cd131aa9b926cc6b46904efb1b3fc5fa1ab65083926",
                          "typeString": "literal_string \"burn() ERC20.transfer failed.\""
                        }
                      ],
                      "id": 3409,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3579,
                        3580
                      ],
                      "referencedDeclaration": 3580,
                      "src": "911:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "911:89:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3418,
                  "nodeType": "ExpressionStatement",
                  "src": "911:89:8"
                }
              ]
            },
            "documentation": null,
            "id": 3420,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3397,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3420,
                  "src": "793:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3396,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3399,
                  "name": "_minReceived",
                  "nodeType": "VariableDeclaration",
                  "scope": 3420,
                  "src": "807:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3398,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "792:33:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "833:0:8"
            },
            "scope": 3434,
            "src": "779:228:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3432,
              "nodeType": "Block",
              "src": "1066:61:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3428,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3609,
                            "src": "1114:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20ContinuousToken_$3434",
                              "typeString": "contract ERC20ContinuousToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20ContinuousToken_$3434",
                              "typeString": "contract ERC20ContinuousToken"
                            }
                          ],
                          "id": 3427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1106:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 3429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1106:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3425,
                        "name": "reserveToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3332,
                        "src": "1083:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3325",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 3426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2922,
                      "src": "1083:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 3430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1083:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3424,
                  "id": 3431,
                  "nodeType": "Return",
                  "src": "1076:44:8"
                }
              ]
            },
            "documentation": null,
            "id": 3433,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "reserveBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1036:2:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 3424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3423,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3433,
                  "src": "1060:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3422,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1060:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1059:6:8"
            },
            "scope": 3434,
            "src": "1013:114:8",
            "stateMutability": "view",
            "superFunction": 63,
            "visibility": "public"
          }
        ],
        "scope": 3435,
        "src": "58:1071:8"
      }
    ],
    "src": "0:1129:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-11-04T15:50:48.845Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "calculatePurchaseReturn(uint256,uint256,uint32,uint256)": {
        "details": "given a continuous token supply, reserve token balance, reserve ratio, and a deposit amount (in the reserve token), calculates the return for a given conversion (in the continuous token)    * Formula: Return = _supply * ((1 + _depositAmount / _reserveBalance) ^ (_reserveRatio / MAX_RESERVE_RATIO) - 1)",
        "params": {
          "_depositAmount": "deposit amount, in reserve token",
          "_reserveBalance": "total reserve token balance",
          "_reserveRatio": "reserve ratio, represented in ppm, 1-1000000",
          "_supply": "continuous token total supply"
        },
        "return": "purchase return amount"
      },
      "calculateSaleReturn(uint256,uint256,uint32,uint256)": {
        "details": "given a continuous token supply, reserve token balance, reserve ratio and a sell amount (in the continuous token), calculates the return for a given conversion (in the reserve token)    * Formula: Return = _reserveBalance * (1 - (1 - _sellAmount / _supply) ^ (1 / (_reserveRatio / MAX_RESERVE_RATIO)))",
        "params": {
          "_reserveBalance": "total reserve token balance",
          "_reserveRatio": "constant reserve ratio, represented in ppm, 1-1000000",
          "_sellAmount": "sell amount, in the continuous token itself",
          "_supply": "continuous token total supply"
        },
        "return": "sale return amount"
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "name()": {
        "return": "the name of the token."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}